{"version":3,"sources":["slices/store.ts","components/Theme/BaseTheme.ts","utility/Color.utility.tsx","utility/Form.utility.tsx","assets/trash.svg","utility/Svg.utility.tsx","components/ButtonGallery/ButtonGallery.tsx","components/RoutingComponent/RoutingComponent.tsx","interfaces/Common.interface.tsx","utility/Intl.utility.ts","index.tsx"],"names":["store","configureStore","reducer","BaseTheme","MODULE_DARK","MODULE_LIGHT","TEXT_DARK","ICON_DARK","INPUT_DISABLED","INVALID","GRAY_E6","GRAY_84","DIVIDER","FOOTER_HOVER","HOVER","chroma","mix","hex","BUTTON","primary","FG","BG","secondary","HoverVariantSettings","customColorProp","autoAdjustment","dark","light","ActiveVariantSettings","withRelativeSign","v","charAt","getButtonBgVariant","config","settings","isTransparent","alpha","isWhite","distance","set","fg","bg","a","fgc","bgc","compositeChroma","getButtonBgFromHoverVariant","hoverColor","getButtonHoverBg","getButtonActiveBg","styled","input","p","$valid","theme","css","_path","Button","button","$type","CU","TextButton","$size","$weight","$color","DropdownItem","Dropdown","Toggle","Menu","Item","getConditionalRule","rule","prop","value","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrash","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","clipRule","fill","stroke","strokeWidth","strokeMiterlimit","d","s","ForwardRef","CommonRedSvg","$fillStroke","div","attrs","Number","isFinite","$transitionMillis","$strokeWidth","$fill","$stroke","$disabled","$disabledFill","$disabledFillStroke","$disabledStroke","$hoverFill","$hoverFillStroke","$hoverStroke","$activeFill","$activeFillStroke","$activeStroke","Gallery","GallerySection","Title","SectionHeader","SectionButtons","RedButton","FU","custom","HR","hr","Line","$marginTop","$marginBottom","ButtonGallery","as","TrashSvg","width","height","className","disabled","RoutingGrid","RoutingGridLeft","RoutingGridRight","RoutingLink","RoutingComponent","Link","to","path","component","split","map","trim","join","locale","navigator","languages","language","userLanguage","messages","en","enLang","toLowerCase","cache","createIntlCache","HOUR","createIntl","DAY","POSITIVE_INFINITY","Intl","RelativeTimeFormat","localeMatcher","numeric","style","enableMapSet","GlobalStyle","reactNamespacedPrefixes","reduce","b","ReactDOM","render","StrictMode","defaultLocale","prefixes","document","getElementById"],"mappings":"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","file":"static/js/main.5b32b281.chunk.js","sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n// import counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    // counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import chroma from 'chroma-js';\n\nexport const BaseTheme = {\n  MODULE_DARK:    '#1189B0',\n  MODULE_LIGHT:   '#38C6F4',\n\n  TEXT_DARK:      '#3B3B3B',\n  ICON_DARK:      '#3B3B3B',\n\n  INPUT_DISABLED: '#F7F7F7',\n\n  INVALID:        '#F35955',\n\n  GRAY_E6:        '#E6E6E6',\n  GRAY_84:        '#848484',\n\n  DIVIDER:        '#D8D8D8',\n\n  FOOTER_HOVER:   '#E4EBED',\n\n  HOVER:           chroma.mix('#38C6F4', '#FFFFFF', 0.8).hex(),\n\n  BUTTON: {\n    primary: {\n      FG:          '#FFFFFF',\n      BG:          '#1189B0',\n    },\n    secondary: {\n      FG:          '#3B3B3B',\n      BG:          'rgba(255, 255, 255, 0)', // Avoid transparent since chroma rejects it\n    },\n  },\n};\n\nexport default BaseTheme;\n","import chroma, { Color } from 'chroma-js';\nimport { DefaultTheme } from 'styled-components/macro';\n\nconst HoverVariantSettings: VariantSettings  = { customColorProp: 'HOVER',  autoAdjustment: { dark: '-0.05', light: 1-0.030 } };\nconst FocusVariantSettings: VariantSettings  = { customColorProp: 'FOCUS',  autoAdjustment: { dark: '-0.05', light: 1-0.030 } };\nconst ActiveVariantSettings: VariantSettings = { customColorProp: 'ACTIVE', autoAdjustment: { dark: '-0.12', light: 1-0.075 } };\n\ntype ButtonConfig = DefaultTheme[\"BUTTON\"][keyof DefaultTheme[\"BUTTON\"]];\nexport interface VariantSettings {\n  customColorProp: 'HOVER' | 'FOCUS' | 'ACTIVE',\n  autoAdjustment: {\n    dark: number | string,\n    light: number | string,\n  },\n}\n\nfunction compositeChroma(fg: string = '#000000', bg: string = '#FFFFFF'): Color {\n  const a: number  = chroma(fg).alpha();\n  const fgc: Color = chroma(fg).alpha(1);\n  const bgc: Color = chroma(bg);\n  return chroma.mix(fgc, bgc, 1-a);\n}\nfunction withRelativeSign(v: string | number): string | number {\n  if(typeof v === 'number') return v;                        // passed as absolute value\n  if(v.charAt(0) === '+' || v.charAt(0) === '-') return v;   // passed as signed relative value\n  return `+${v}`;                                            // unsigned relative value treated as positive\n}\n\nfunction getButtonBgVariant(config: ButtonConfig, settings: VariantSettings): string {\n  if(!config) return 'transparent';\n\n  // Use override color if one was provided in button theming\n  if(config?.[settings.customColorProp]) {\n    return config[settings.customColorProp]!;\n  }\n  const bgc: Color = chroma(config.BG);\n\n  const isTransparent: boolean = (bgc.alpha() === 0);\n  const isWhite: boolean = (chroma.distance(config.BG, '#FFF') === 0);\n\n  // Use a lightened color variant when possible\n  if(!isTransparent && !isWhite) {\n    return compositeChroma(config.BG).set('hsl.l', withRelativeSign(settings.autoAdjustment.dark)).hex();\n  }\n\n  // If BG color is white or fully transparent, use white tinted with that FG color\n  // Note: Setting absolute lightness will set alpha to fully opaque\n  return chroma(config.FG).set('hsl.l', withRelativeSign(settings.autoAdjustment.light)).hex();\n}\n// Given a variant color, calculate the BG that would produce that variant\nexport function getButtonBgFromHoverVariant(hoverColor: string): string {\n  return chroma(hoverColor).set('hsl.l', withRelativeSign(`${-HoverVariantSettings.autoAdjustment.dark}`)).hex();\n}\nexport function getButtonBgFromFocusVariant(focusColor: string): string {\n  return chroma(focusColor).set('hsl.l', withRelativeSign(`${-FocusVariantSettings.autoAdjustment.dark}`)).hex();\n}\nexport function getButtonBgFromActiveVariant(activeColor: string): string {\n  return chroma(activeColor).set('hsl.l', withRelativeSign(`${-ActiveVariantSettings.autoAdjustment.dark}`)).hex();\n}\n// Given a BG and FG, calculate the variant color\nexport function getButtonHoverBg(config: ButtonConfig): string {\n  return getButtonBgVariant(config, HoverVariantSettings);\n}\nexport function getButtonFocusBg(config: ButtonConfig): string {\n  return getButtonBgVariant(config, FocusVariantSettings);\n}\nexport function getButtonActiveBg(config: ButtonConfig): string {\n  return getButtonBgVariant(config, ActiveVariantSettings);\n}\n","import styled from 'styled-components/macro';\nimport { Dropdown } from 'react-bootstrap';\nimport chroma from 'chroma-js';\n\nimport * as CU from '@utility/Color.utility'\n\ninterface ValidProp {\n  $valid?: boolean,\n}\nexport const Input = styled.input<ValidProp>`\n  max-width: 312px;\n  width: 100%;\n  height: 36px;\n  padding: 0px 18px;\n  border: 2px solid ${p => p.$valid !== false ? p.theme.GRAY_E6 : p.theme.INVALID};\n  border-radius: 6px;\n  color: ${p => p.theme.TEXT_DARK};\n  outline: none;\n  transition: border-color 0.15s ease-out, background-color 0.15s ease-out;\n  font-size: 15px;\n  line-height: 1.2;\n  font-family: 'Roboto', 'Arial', 'sans-serif';\n\n  &.focus,\n  &:focus {\n    border-color: ${p => p.$valid !== false ? p.theme.MODULE_LIGHT : p.theme.INVALID}\n  }\n  &.disabled,\n  &:disabled {\n    background-color: ${p => p.theme.INPUT_DISABLED};\n    border-color: ${p => chroma.hex(p.theme.GRAY_E6).alpha(0.3).css()};\n  }\n  &::placeholder {\n    opacity: 0.3;\n    color: ${p => p.theme.TEXT_DARK};\n  }\n`;\ninterface ButtonTypeProp {\n  $type: 'primary' | 'secondary' | 'custom',\n}\n\nexport const Button = styled.button<ButtonTypeProp>`\n  min-width: 134px;\n  height: 36px;\n  padding: 0 8px;\n  border-radius: 8px;\n  display: inline-grid;\n  place-content: center;\n  text-align: center;\n  font-family: 'Roboto', 'Arial', sans-serif;\n  font-size: 15px;\n  font-weight: 500;\n  transition: background 0.3s ease-out, opacity 0.3s ease-out;\n  cursor: pointer;\n  \n  &,\n  // &.focus,\n  // &:focus,\n  &.active,\n  &:active,\n  &.hover,\n  &:hover {\n    border: 0px solid transparent;\n    outline: none;\n    ${p => p.theme.BUTTON[p.$type]?.FG ? `color: ${p.theme.BUTTON[p.$type]?.FG};` : ``}\n  }\n\n  ${p => p.theme.BUTTON[p.$type]?.BG ? `background: ${p.theme.BUTTON[p.$type]?.BG};` : ``}\n\n  &.hover,\n  &:hover {\n    ${p => p.theme.BUTTON[p.$type] ? `background: ${CU.getButtonHoverBg(p.theme.BUTTON[p.$type]!)};` : ``}\n  }\n  // &.focus,\n  // &:focus {\n  //   ${p => p.theme.BUTTON[p.$type] ? `background: ${CU.getButtonFocusBg(p.theme.BUTTON[p.$type]!)};` : ``}\n  // }\n  &.active,\n  &:active {\n    ${p => p.theme.BUTTON[p.$type] ? `background: ${CU.getButtonActiveBg(p.theme.BUTTON[p.$type]!)};` : ``}\n  }\n  &.disabled,\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n    ${p => p.theme.BUTTON[p.$type]?.BG ? `background: ${p.theme.BUTTON[p.$type]?.BG};` : ``}\n  }\n`;\n\nexport const FooterAction = styled.button`\n  padding: 0 27px 0 37px;\n  border-radius: 0;\n  text-align: center;\n  font-family: 'Roboto', 'Arial', sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n  transition: background 0.3s ease-out, opacity 0.3s ease-out;\n  cursor: pointer;\n\n  & {\n    border-top: none;\n    border-bottom: none;\n    border-left: 1px solid ${p => p.theme.GRAY_E6};\n    border-right: 1px solid ${p => p.theme.GRAY_E6};\n  \n    & + & {\n      border-left: 0px solid transparent;\n    }\n  }\n\n  align-self: stretch;\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 10px;\n  place-content: center;\n  align-items: center;\n  \n  &,\n  // &.focus,\n  // &:focus,\n  &.active,\n  &:active,\n  &.hover,\n  &:hover {\n    outline: none;\n    color: ${p => p.theme.TEXT_DARK};\n  }\n\n  background: #FFFFFF;\n\n  &.hover,\n  &:hover {\n    background: ${p => CU.getButtonHoverBg({ BG: CU.getButtonBgFromHoverVariant(p.theme.FOOTER_HOVER), FG: '' })};\n  }\n  // &.focus,\n  // &:focus {\n  //   background: ${p => CU.getButtonFocusBg({ BG: CU.getButtonBgFromHoverVariant(p.theme.FOOTER_HOVER), FG: '' })};\n  // }  \n  &.active,\n  &:active {\n    background: ${p => CU.getButtonActiveBg({ BG: CU.getButtonBgFromHoverVariant(p.theme.FOOTER_HOVER), FG: '' })};\n  }\n  &.disabled,\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n    background: #FFFFFF;\n  }\n`;\n\ninterface TextButtonProps {\n  $color?: string,\n  $weight?: number,\n  $size?: number,\n}\nexport const TextButton = styled.button<TextButtonProps>`\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  user-select: none;\n  font-family: 'Roboto', 'Arial', sans-serif;\n  font-size: ${p => p.$size ?? 12}px;\n  font-weight: ${p => p.$weight ?? 500};\n  transition: opacity 0.3s ease-out;\n\n  &,\n  &.hover,\n  &:hover,\n  &.active,\n  &:active,\n  &.focus,\n  &:focus {\n    outline: none;\n    background: transparent;\n    border: 0px solid transparent;\n    box-shadow: none;\n    color: ${p => p.$color ? p.$color: p.theme.MODULE_DARK};\n  }\n  &.disabled,\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n`;\nexport const DropdownToggle = styled(Dropdown.Toggle)`\n  display: grid;\n  grid-column-gap: 8px;\n  grid-auto-flow: column;\n  align-items: center;\n  cursor: pointer;\n  font-family: 'Roboto','Arial',sans-serif;\n\n  &:after {\n    content: initial;\n  }\n\n  &,\n  &.hover,\n  &:hover,\n  &.active,\n  &:active,\n  &.focus,\n  &:focus {\n    outline: none;\n    background: transparent;\n    border: 0px solid transparent;\n    color: ${p => p.theme.TEXT_DARK};\n    box-shadow: none;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\nexport const DropdownMenu = styled(Dropdown.Menu)`\n  min-width: 160px;\n  padding: 8px 0;\n  border: 0px solid transparent;\n  border-radius: 10px;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #FFFFFF;\n  overflow-y: auto;\n\n  &:not(.show) {\n    display: none;\n  }\n  &.show {\n    z-index: 1000;\n  }\n`;\nexport const DropdownItem = styled(Dropdown.Item)`\n  width: 100%;\n  padding: 5px 18px 5px 18px;\n  display: block;\n  cursor: pointer;\n  font-size: 15px;\n  line-height: 1.5;\n  white-space: nowrap;\n  \n  &,\n  &.focus,\n  &:focus,\n  &.active,\n  &:active,\n  &.disabled,\n  &:disabled {\n    outline: none;\n    color: ${p => p.theme.TEXT_DARK};\n    background-color: #FFFFFF;\n  }\n  &,\n  &.focus,\n  &:focus {\n    outline: none;\n  }\n  &.hover,\n  &:hover {\n    background-color: ${p => p.theme.HOVER};\n  }\n  &,\n  &.focus,\n  &:focus,\n  &.hover,\n  &:hover {\n    text-decoration: initial;\n  }\n  &[aria-disabled=\"true\"] {\n    pointer-events: auto;\n    cursor: not-allowed;\n    background-color: transparent;\n    opacity: 0.5;\n  }\n`;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 28 28\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    clipRule: \"evenodd\",\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    d: \"M6 5.7l1.4 18.6c.1 1 .9 1.7 1.8 1.7h9.5c1 0 1.8-.7 1.8-1.7L22 5.7M10.8 9.2V22M14 9.2V22m3.2-12.8V22M3.6 5.1h20.8m-13.6-.7v-1c0-.8.7-1.5 1.5-1.5h3.4c.8 0 1.5.7 1.5 1.5v1\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.c1faff0a.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro';\n\ninterface Settings {\n  $stroke?: string,\n  $fill?: string,\n  $fillStroke?: string,\n  $strokeWidth?: number,\n  $hoverStroke?: string,\n  $hoverFill?: string,\n  $hoverFillStroke?: string,\n  $activeStroke?: string,\n  $activeFill?: string,\n  $activeFillStroke?: string,\n  $disabled?: boolean,\n  $disabledStroke?: string,\n  $disabledFill?: string,\n  $disabledFillStroke?: string,\n  $transitionMillis?: number,\n}\n\nconst getConditionalRule = (rule: string, prop: string, value?: number | string): string => {\n  return (value === undefined || value === null) ? '' : `${rule} { ${prop}: ${value}; }`;\n}\n\n// Lowercase to override the base type\nexport const styledSvg = (s?: Settings) => styled.div.attrs(props => s ?? {})<Settings>`\n  // For convenience so styled-components padding can be defined\n  // independently of width and height component props\n  box-sizing: content-box;\n\n  > * {\n    pointer-events: none;\n    line-height: 0;\n  }\n\n  [fill=\"#000\"],\n  [stroke=\"#000\"] {\n    ${p => Number.isFinite(p.$transitionMillis) ? `transition: fill ${p.$transitionMillis}ms ease-in-out, stroke ${p.$transitionMillis}ms ease-in-out;` : ``}\n  }\n\n  ${p => getConditionalRule('[stroke-width]', 'stroke-width', p.$strokeWidth)}\n  \n  ${p => getConditionalRule('[fill=\"#000\"]',   'fill',   p.$fill   || p.$fillStroke)}\n  ${p => getConditionalRule('[stroke=\"#000\"]', 'stroke', p.$stroke || p.$fillStroke)}\n\n  ${p => getConditionalRule('[fill=\"#000\"]',   'fill',   p.$disabled ? (p.$disabledFill   || p.$disabledFillStroke) : undefined)}\n  ${p => getConditionalRule('[stroke=\"#000\"]', 'stroke', p.$disabled ? (p.$disabledStroke || p.$disabledFillStroke) : undefined)}\n\n  &:hover {\n    ${p => getConditionalRule('[fill=\"#000\"]',   'fill',   p.$hoverFill   || p.$hoverFillStroke)}\n    ${p => getConditionalRule('[stroke=\"#000\"]', 'stroke', p.$hoverStroke || p.$hoverFillStroke)}\n  }\n  &.active {\n    ${p => getConditionalRule('[fill=\"#000\"]',   'fill',   p.$activeFill   || p.$activeFillStroke)}\n    ${p => getConditionalRule('[stroke=\"#000\"]', 'stroke', p.$activeStroke || p.$activeFillStroke)}\n  }\n`;\n\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nimport * as FU from '@utility/Form.utility';\nimport * as SU from '@utility/Svg.utility';\nimport BaseTheme from '@components/Theme/BaseTheme';\n\nimport { ReactComponent as TrashSvg } from '@assets/trash.svg';\n\nconst CommonRedSvg = styled(SU.styledSvg({ $fillStroke: BaseTheme.INVALID }))``;\n\nconst Gallery = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 30px 40px;\n  display: grid;\n  place-content: start;\n  grid-auto-flow: row;\n  grid-row-gap: 40px;\n  overflow-y: auto;\n\n  &:after {\n    content: '';\n    height: 1px;\n  }\n`;\nconst GallerySection = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-row-gap: 12px;\n  place-content: start;\n`;\nconst Title = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n`;\nconst SectionHeader = styled.div`\n  font-size: 18px;\n  color: ${p => p.theme.TEXT_DARK};\n  display: block;\n`;\nconst SectionButtons = styled.div`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-column-gap: 12px;\n  justify-content: start;\n  align-items: center;\n`;\nconst RedButton = styled(FU.Button).attrs({\n  theme: { BUTTON: { custom: { FG: BaseTheme.INVALID, BG: 'rgba(0, 0, 0, 0)' } } }\n})`\n  display: inline-grid;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-column-gap: 6px;\n`;\nconst HR = styled.hr`\n  width: 100%;\n  border: none;\n  border-top: 1px solid ${p => p.theme.DIVIDER};\n`;\ninterface MarginProps {\n  $marginTop?: number,\n  $marginBottom?: number,\n}\nconst Line = styled.div<MarginProps>`\n  display: block;\n  margin-top: ${p => p.$marginTop ?? 0}px;\n  margin-bottom: ${p => p.$marginBottom ?? 0}px;\n`;\nexport default function ButtonGallery() {\n  return (\n    <Gallery>\n      <GallerySection>\n        <Title>Form Buttons</Title>\n        <SectionHeader>\n          Usually tied to changes within the application data. Often results in navigation on confirming or discarding the changes.\n          May be accompanied by icons.\n        </SectionHeader>\n        <SectionButtons>\n          <RedButton $type=\"custom\">\n            <CommonRedSvg as={TrashSvg} width={19} height={19} />\n            <span>Delete</span>\n          </RedButton>\n          <FU.Button $type=\"secondary\">Cancel</FU.Button>\n          <FU.Button $type=\"primary\">Submit</FU.Button>\n        </SectionButtons>\n        <SectionButtons>\n          <RedButton $type=\"custom\">\n            <CommonRedSvg as={TrashSvg} width={19} height={19} />\n            <span>Generously Sized</span>\n          </RedButton>\n          <FU.Button $type=\"secondary\">Generously Sized</FU.Button>\n          <FU.Button $type=\"primary\">Generously Sized</FU.Button>\n        </SectionButtons>\n        <SectionHeader>\n          <Line $marginBottom={6}>Has hovered, active, and disabled treatments.</Line>\n          <Line>Hovered: -5% lightness of BG (absolute) if non-transparent/white - otherwise 97.0% lightness of FG (absolute)</Line>\n          <Line>Active: -12% lightess of BG (absolute) if non-transparent/white - otherwise 92.5% lightness of FG (absolute)</Line>\n          <Line>Disabled: 50% opacity</Line>\n        </SectionHeader>\n\n        <SectionButtons>\n          <RedButton $type=\"custom\" className={`hover`}>\n            <CommonRedSvg as={TrashSvg} width={19} height={19} />\n            <span>Hovered</span>\n          </RedButton>\n          <FU.Button $type=\"secondary\" className={`hover`}>Hovered</FU.Button>\n          <FU.Button $type=\"primary\" className={`hover`}>Hovered</FU.Button>\n        </SectionButtons>\n        <SectionButtons>\n          <RedButton $type=\"custom\" className={`active`}>\n            <CommonRedSvg as={TrashSvg} width={19} height={19} />\n            <span>Active</span>\n          </RedButton>\n          <FU.Button $type=\"secondary\" className={`active`}>Active</FU.Button>\n          <FU.Button $type=\"primary\" className={`active`}>Active</FU.Button>\n        </SectionButtons>\n        <SectionButtons>\n          <RedButton $type=\"custom\" disabled>\n            <CommonRedSvg as={TrashSvg} width={19} height={19} />\n            <span>Disabled</span>\n          </RedButton>\n          <FU.Button $type=\"secondary\" disabled>Disabled</FU.Button>\n          <FU.Button $type=\"primary\" disabled>Disabled</FU.Button>\n        </SectionButtons>\n\n        <SectionHeader>\n          No RTL treatments have currently been defined.\n        </SectionHeader>\n      </GallerySection>\n\n      <HR/>\n\n      <GallerySection>\n        <Title>Text Buttons</Title>\n        <SectionHeader>\n          Used to handle batch selections.\n          No special treatments for hover or pressed states.\n        </SectionHeader>\n        <SectionButtons>\n          <FU.TextButton>Select All</FU.TextButton>\n          <FU.TextButton>Clear</FU.TextButton>\n        </SectionButtons>\n        <SectionHeader>\n          Disabled state is used when no action would be performed, for example, when no items are available.\n        </SectionHeader>\n        <SectionButtons>\n          <FU.TextButton disabled>Select All</FU.TextButton>\n          <FU.TextButton disabled>Clear</FU.TextButton>\n        </SectionButtons>\n\n        <HR/>\n\n        <SectionHeader>\n          <Title>Icon Buttons</Title>\n          TODO\n        </SectionHeader>\n      </GallerySection>\n    </Gallery>\n  );\n}\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport * as FU from '@utility/Form.utility';\nimport ButtonGallery from '@components/ButtonGallery/ButtonGallery';\n\nconst RoutingGrid = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr;\n`;\nconst RoutingGridLeft = styled.div`\n  padding: 30px 60px 30px 40px;\n  border-right: 1px solid ${p => p.theme.DIVIDER};\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: auto;\n  grid-auto-flow: row;\n  grid-row-gap: 0px;\n  align-content: start;\n`;\nconst RoutingGridRight = styled.div`\n  overflow: hidden;\n`;\nconst RoutingLink = styled(FU.DropdownItem)`\n  width: calc(100% + 100px);\n  margin-left: -40px;\n  padding-left: 40px;\n\n  &,\n  &:visited {\n    text-decoration: none;\n  }\n`;\nconst HR = styled.hr`\n  width: 100%;\n  margin: 20px 0;\n  border: none;\n  border-top: 1px solid ${p => p.theme.DIVIDER};\n`;\nexport default function RoutingComponent() {\n  return (\n    <BrowserRouter>\n      <RoutingGrid>\n        <RoutingGridLeft>\n          <RoutingLink as={Link} to={`/buttons`}>\n            Buttons\n          </RoutingLink>\n\n          <HR />\n\n\n          <RoutingLink as={Link} to={`/text-fields`}>\n            TODO: Text Fields\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/selectors`}>\n            TODO: Selectors\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/dropdowns`}>\n            TODO: Dropdowns\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/modals`}>\n            TODO: Modals\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/drawers`}>\n            TODO: Drawers\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/palettes`}>\n            TODO: Palettes\n          </RoutingLink>\n          <RoutingLink as={Link} to={`/icons`}>\n            TODO: Icons\n          </RoutingLink>\n        </RoutingGridLeft>\n        <RoutingGridRight>\n          <Switch>\n            <Route path=\"/buttons\" component={ButtonGallery} />\n\n            <Route path=\"/text-fields\">\n              <pre>\n                {\n                  `\n                    TODO: Text Fields\n\n                    Single line text field\n                    Single line text field with icon (e.g. search)\n                    Single line text field with placeholder text\n                    Single line text field with focused state\n                    Single line text field with invalid state\n                    Single line text field in disabled state\n                    Single line text field with built-in navigation (&lt; &gt; arrows)\n                    Multiple line text field\n                    Multiple line text field with placeholder text\n                    Multiple line text field with focused state\n                    Multiple line text field with invalid state\n                    Multiple line text field in disabled state\n                    Validation error messaging\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/selectors\">\n              <pre>\n                {\n                  `\n                    TODO: Selectors\n\n                    Radio Buttons\n                    Toggle Selectors\n                    Yes/No Checkboxes\n                    Yes/No + Indeterminate Checkboxes\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/dropdowns\">\n              <pre>\n                {\n                  `\n                    TODO: Dropdowns\n\n                    Actions Dropdown\n                    Single-Selection Dropdown\n                    Multi-Selection Dropdown\n                    Dropdowns with Dividers\n                    Dropdowns with Icons\n                    Dropdowns without frames\n                    Icon Toggle Dropdowns\n                    Autocomplete searchable dropdowns\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/modals\">\n              <pre>\n                {\n                  `\n                    TODO: Modals\n\n                    Alert Modal + Icon\n                    Unsaved Changes Modal\n                    Yes/No Confirmation Modal\n                    Workflow Modal\n                    Scrolling in modals\n                    Modals with footers\n                    Modals where ESC / Backdrop dismissal should be disabled\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/drawers\">\n              <pre>\n                {\n                  `\n                    TODO: Drawers\n\n                    Left Drawer\n                    Right Drawer\n                    Inline Drawer\n                    Overlay Drawer\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/palettes\">\n              <pre>\n                {\n                  `\n                    TODO: Palettes\n\n                    Calendar\n                    Distro\n                    Platform Admin\n                    Common\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n            <Route path=\"/icons\">\n              <pre>\n                {\n                  `\n                    TODO: Icons\n\n                    Gallery of all SVG icons checked into repository\n                  `.split('\\n').map(s => s.trim()).join('\\n')\n                }\n              </pre>\n            </Route>\n          </Switch>\n        </RoutingGridRight>\n      </RoutingGrid>\n    </BrowserRouter>\n  );\n}\n\n","import * as GU from '@utility/General.utility';\n\nexport type GLColor = [ number, number, number, number ];\n\nexport const RS = {\n  IDLE:      GU.getValue(\"idle\"),\n  PENDING:   GU.getValue(\"pending\"),\n  FULFILLED: GU.getValue(\"fulfilled\"),\n  REJECTED:  GU.getValue(\"rejected\"),\n};\nexport type RSType = (typeof RS)[keyof typeof RS];\n\nexport interface RSData {\n  status: RSType,\n  timestamp: number,\n}\nexport const InitialRS = {\n  status: RS.IDLE,\n  timestamp: 0,\n}\nexport function shouldFetch(rsData?: RSData, settings?: { errorTimeout?: number, refreshTimeout?: number }): boolean {\n  const { status, timestamp } = rsData || InitialRS;\n  const refreshNum: number = (typeof settings?.refreshTimeout === 'number' && settings.refreshTimeout > 0) ? settings.refreshTimeout : Number.POSITIVE_INFINITY;\n  const retryNum:   number = (typeof settings?.errorTimeout === 'number'   && settings.errorTimeout   > 0) ? settings.errorTimeout   : Number.POSITIVE_INFINITY;\n  switch(status) {\n    case RS.IDLE:       return true;\n    case RS.PENDING:    return false;\n    case RS.FULFILLED:  return (Date.now() > (timestamp + refreshNum));\n    case RS.REJECTED:   return (Date.now() > (timestamp + retryNum  ));\n    default:                return false;\n  }\n}\nexport function isRequestStatusIdle(rs?: RSData): boolean {\n  return !rs || rs.status === RS.IDLE;\n}\nexport function isRequestStatusPending(rs?: RSData): boolean {\n  return !!rs && (rs.status === RS.PENDING);\n}\nexport function isRequestStatusFulfilled(rs?: RSData): boolean {\n  return !!rs && (rs.status === RS.FULFILLED);\n}\nexport function isRequestStatusRejected(rs?: RSData): boolean {\n  return !!rs && (rs.status === RS.REJECTED);\n}\nexport function isRequestStatusDone(rs?: RSData): boolean {\n  return !!rs && (rs.status === RS.FULFILLED || rs.status === RS.REJECTED);\n}\n\nexport function setStatus(status: RSType, netStatusData: RSData): void {\n  netStatusData.status = status;\n\n  switch(status) {\n    case RS.FULFILLED:  netStatusData.timestamp = Date.now();  break;\n    case RS.REJECTED:   netStatusData.timestamp = Date.now();  break;\n  }\n};\n\nexport const RelativeTimeFormatUnit = {\n  SECOND:   GU.getValue(\"second\"),\n  MINUTE:   GU.getValue(\"minute\"),\n  HOUR:     GU.getValue(\"hour\"),\n  DAY:      GU.getValue(\"day\"),\n  WEEK:     GU.getValue(\"week\"),\n  MONTH:    GU.getValue(\"month\"),\n  QUARTER:  GU.getValue(\"quarter\"),\n  YEAR:     GU.getValue(\"year\"),\n};\nexport type RelativeTimeFormatUnitType = (typeof RelativeTimeFormatUnit)[keyof typeof RelativeTimeFormatUnit];\n\nexport const ModuleCodeName = {\n  PLATFORM_ADMIN:    GU.getValue('platform-admin'),\n  CALENDAR:          GU.getValue('calendar'),\n  DISTRO:            GU.getValue('distro'),\n  BUDGETING:         GU.getValue('budgeting'),\n  PROOFING:          GU.getValue('proofing'),\n};\nexport type ModuleCodeNameType = (typeof ModuleCodeName)[keyof typeof ModuleCodeName];\n","import { createIntl, createIntlCache } from 'react-intl';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/fr';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/fr';\n\n// import frLang from '@languages/fr.compile.json';\nimport enLang from '@languages/en.compile.json';\n\nimport * as CI from '@interfaces/Common.interface';\nimport * as GU from '@utility/General.utility';\n\n// @ts-ignore\nconst locale = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\nconst languageWithoutRegionCode = locale.toLowerCase().split(/[_-]+/)[0];\nconst localizations: any = { en: enLang, /* fr: frLang */ };\nconst messages = localizations[languageWithoutRegionCode || locale];\n\n// Formatjs / React-Intl: Imperative API for use in redux\nconst cache = createIntlCache();\nconst intl = createIntl({ locale, messages }, cache);\n\n// https://momentjs.com/docs/#/customization/relative-time-threshold/\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR   = 60 * MINUTE;\nconst DAY    = 24 * HOUR;\nconst rtfUnitLimits: number[] = [\n    1 * SECOND,\n   60 * SECOND,\n   60 * MINUTE,\n   24 * HOUR,\n    7 * DAY,\n   30 * DAY,\n  365 * DAY,\n  Number.POSITIVE_INFINITY\n];\nconst rtfUnitData: [ unitMs: number, unitLimitMs: number, unit: CI.RelativeTimeFormatUnitType ][] = [\n  [ rtfUnitLimits[0], rtfUnitLimits[1], CI.RelativeTimeFormatUnit.SECOND ],\n  [ rtfUnitLimits[1], rtfUnitLimits[2], CI.RelativeTimeFormatUnit.MINUTE ],\n  [ rtfUnitLimits[2], rtfUnitLimits[3], CI.RelativeTimeFormatUnit.HOUR   ],\n  [ rtfUnitLimits[3], rtfUnitLimits[4], CI.RelativeTimeFormatUnit.DAY    ],\n  [ rtfUnitLimits[4], rtfUnitLimits[5], CI.RelativeTimeFormatUnit.WEEK   ],\n  [ rtfUnitLimits[5], rtfUnitLimits[6], CI.RelativeTimeFormatUnit.MONTH  ],\n  [ rtfUnitLimits[6], rtfUnitLimits[7], CI.RelativeTimeFormatUnit.YEAR   ],\n];\nconst rtf = new Intl.RelativeTimeFormat(locale, { localeMatcher: 'best fit', numeric: 'always', style: 'long' });\nfunction getRelativeTime(ts: number): string {\n  const dt: number = Date.now() - ts;\n  const [ unitMs,, unit ] = rtfUnitData[GU.getInsertPosition(rtfUnitData, dt, ([,a],b) => (a-1) - b)];\n  return rtf.format(-Math.round(dt / unitMs), unit);\n}\n\nexport { locale, messages, intl, getRelativeTime, SECOND, MINUTE, HOUR, DAY };\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as styled from 'styled-components';\nimport * as ReactIntl from 'react-intl';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport { enableMapSet } from 'immer';\n\nimport { store } from '@slices/store';\nimport BaseTheme from '@components/Theme/BaseTheme';\nimport RoutingComponent from '@components/RoutingComponent/RoutingComponent';\nimport { locale, messages } from '@utility/Intl.utility';\n\n// import * as serviceWorker from './serviceWorker';\n\nenableMapSet();\n\nconst GlobalStyle = styled.createGlobalStyle`\n  body {\n    overflow: hidden;\n    -webkit-font-smoothing: antialiased;\n    font-family: 'Roboto', 'Arial', sans-serif;\n  }\n  html,\n  body {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n  }\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n  *, :after, :before {\n    box-sizing: border-box;\n  }\n`;\n\nconst reactNamespacedPrefixes = [\n  \"tooltip\",\n  \"dropdown\",\n  \"dropdown-toggle\",\n  \"dropdown-menu\",\n  \"btn\",\n].reduce((a,b) => Object.assign(a, { [b]: `ccbs-${b}` }), {});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactIntl.IntlProvider locale={locale} messages={messages} defaultLocale=\"en\">\n      <Provider store={store}>\n        <GlobalStyle />\n        <ReactBootstrap.ThemeProvider prefixes={reactNamespacedPrefixes}>\n          <styled.ThemeProvider theme={BaseTheme}>\n            <RoutingComponent />\n          </styled.ThemeProvider>\n        </ReactBootstrap.ThemeProvider>\n      </Provider>\n    </ReactIntl.IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}